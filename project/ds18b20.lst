C51 COMPILER V9.00   DS18B20                                                               04/26/2024 12:29:57 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\output\ds18b20.obj
COMPILER INVOKED BY: D:\app\kile\C51\BIN\C51.EXE app\ds18b20.c BROWSE INCDIR(.\app) DEBUG OBJECTEXTEND PRINT(.\ds18b20.l
                    -st) OBJECT(.\output\ds18b20.obj)

line level    source

   1          #include <ds18b20.h> 
   2          
   3          sbit ds=P3^7;     //温度传感器信号线 
   4            
   5          void dsreset()    //18B20复位，初始化
   6          {
   7   1        u16 i;
   8   1        ds=0;
   9   1        i=103;
  10   1        while(i>0)i--; //延时
  11   1        ds=1;
  12   1        i=4;
  13   1        while(i>0)i--;   //延时
  14   1      }
  15          
  16          bit tempreadbit()   //读1位数据
  17          {
  18   1         u16 i;
  19   1         bit dat;
  20   1         ds=0;i++;          //i++ 起延时作用
  21   1         ds=1;i++;i++;
  22   1         dat=ds;
  23   1         i=8;while(i>0)i--;   //延时
  24   1         return(dat);
  25   1      }
  26          
  27          u8 tempread()   //读8位(1个字节)数据
  28          {
  29   1        u8 i,j,dat;
  30   1        dat=0;
  31   1        for(i=1;i<=8;i++)
  32   1        {
  33   2          j=tempreadbit();
  34   2          dat=(j<<7)|(dat>>1);   //读出的数据最低位在最前面，这样刚好一个字节在DAT里
  35   2        }
  36   1        return(dat);
  37   1      }
  38          
  39          void tempwritebyte(u8 dat)   //向18B20写一个字节数据
  40          {
  41   1        u16 i;
  42   1        u8 j;
  43   1        bit testb;
  44   1        for(j=1;j<=8;j++)
  45   1        {
  46   2          testb=dat&0x01;
  47   2          dat=dat>>1;
  48   2          if(testb)     //写 1
  49   2          {
  50   3            ds=0;
  51   3            i++;i++;   //延时
  52   3            ds=1;
  53   3            i=8;while(i>0)i--;  //延时长
  54   3          }
C51 COMPILER V9.00   DS18B20                                                               04/26/2024 12:29:57 PAGE 2   

  55   2          else
  56   2          {
  57   3            ds=0;       //写 0
  58   3            i=8;while(i>0)i--;   //延时长
  59   3            ds=1;
  60   3            i++;i++;                  //延时
  61   3          }
  62   2        }
  63   1      }
  64          
  65          void Ds18b20_Tempchg()  //DS18B20 发送命令开始温度测量（测量并转换）
  66          {
  67   1        dsreset();   //复位
  68   1        delay_ms(1);
  69   1        tempwritebyte(0xcc);  // 写跳过读ROM指令
  70   1        tempwritebyte(0x44);  // 写温度转换指令
  71   1      }
  72          
  73          float Ds18b20_Gettemp()  //读取寄存器中存储的温度数据
  74          {
  75   1        u8 a,b;
  76   1        u16 t;
  77   1        int temp;
  78   1        float f_temp;
  79   1        dsreset();
  80   1        delay_ms(1);
  81   1        tempwritebyte(0xcc);// 写跳过读ROM指令
  82   1        tempwritebyte(0xbe);// 发读数据指令
  83   1        a=tempread();         //读低8位
  84   1        b=tempread();         //读高8位
  85   1        if(b&0x08) b=b|0xf0;
  86   1        t=b;
  87   1        t*=256;            //两个字节组合为1个字
  88   1        t=t|a;                                                         
  89   1        temp=t;
  90   1        f_temp=temp*0.0625;      //温度在寄存器中为12位 分辨率位0.0625°
  91   1        return  f_temp; 
  92   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
